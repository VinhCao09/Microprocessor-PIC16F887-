CCS PCM C Compiler, Version 5.101, 43599               06-May-23 16:07

               Filename:   D:\processor\bai13\VDKB.lst

               ROM used:   1071 words (13%)
                           Largest free fragment is 2048
               RAM used:   28 (8%) at main() level
                           39 (11%) worst case
               Stack used: 4 locations (3 in main + 1 for interrupts)
               Stack size: 8

*
0000:  MOVLW  03
0001:  MOVWF  0A
0002:  GOTO   310
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  BSF    03.6
0016:  MOVF   0D,W
0017:  BCF    03.6
0018:  MOVWF  27
0019:  BSF    03.6
001A:  MOVF   0F,W
001B:  BCF    03.6
001C:  MOVWF  28
001D:  BSF    03.6
001E:  MOVF   0C,W
001F:  BCF    03.6
0020:  MOVWF  29
0021:  BSF    03.6
0022:  MOVF   0E,W
0023:  BCF    03.6
0024:  MOVWF  2A
0025:  BCF    03.7
0026:  BCF    03.5
0027:  MOVLW  8C
0028:  MOVWF  04
0029:  BTFSS  00.5
002A:  GOTO   02D
002B:  BTFSC  0C.5
002C:  GOTO   04E
002D:  MOVF   22,W
002E:  MOVWF  04
002F:  MOVF   23,W
0030:  MOVWF  77
0031:  MOVF   24,W
0032:  MOVWF  78
0033:  MOVF   25,W
0034:  MOVWF  79
0035:  MOVF   26,W
0036:  MOVWF  7A
0037:  MOVF   27,W
0038:  BSF    03.6
0039:  MOVWF  0D
003A:  BCF    03.6
003B:  MOVF   28,W
003C:  BSF    03.6
003D:  MOVWF  0F
003E:  BCF    03.6
003F:  MOVF   29,W
0040:  BSF    03.6
0041:  MOVWF  0C
0042:  BCF    03.6
0043:  MOVF   2A,W
0044:  BSF    03.6
0045:  MOVWF  0E
0046:  BCF    03.6
0047:  MOVF   20,W
0048:  MOVWF  0A
0049:  SWAPF  21,W
004A:  MOVWF  03
004B:  SWAPF  7F,F
004C:  SWAPF  7F,W
004D:  RETFIE
004E:  BCF    0A.3
004F:  BCF    0A.4
0050:  GOTO   059
.................... #include<16f887.h>
.................... //////////// Standard Header file for the PIC16F887 device ////////////////
.................... ///////////////////////////////////////////////////////////////////////////
.................... ////        (C) Copyright 1996, 2020 Custom Computer Services          ////
.................... //// This source code may only be used by licensed users of the CCS C  ////
.................... //// compiler.  This source code may only be distributed to other      ////
.................... //// licensed users of the CCS C compiler.  No other use, reproduction ////
.................... //// or distribution is permitted without written permission.          ////
.................... //// Derivative programs created using this software in object code    ////
.................... //// form are not restricted in any way.                               ////
.................... ///////////////////////////////////////////////////////////////////////////
.................... #device PIC16F887
0051:  BCF    0A.0
0052:  BCF    0A.1
0053:  BCF    0A.2
0054:  ADDWF  02,F
0055:  RETLW  EF
0056:  RETLW  DF
0057:  RETLW  BF
0058:  RETLW  7F
*
0061:  DATA 4E,34
0062:  DATA E9,32
0063:  DATA 74,10
0064:  DATA E4,37
0065:  DATA A0,25
0066:  DATA 35,1D
0067:  DATA A0,12
0068:  DATA 75,10
0069:  DATA 00,00
006A:  DATA 50,34
006B:  DATA E9,36
006C:  DATA 20,31
006D:  DATA 61,37
006E:  DATA 20,32
006F:  DATA 61,10
0070:  DATA 6E,34
0071:  DATA 61,37
0072:  DATA 3A,10
0073:  DATA 25,36
0074:  DATA 75,10
0075:  DATA 00,00
0076:  DATA 4E,34
0077:  DATA E9,32
0078:  DATA 74,10
0079:  DATA E4,37
007A:  DATA A0,25
007B:  DATA 37,1D
007C:  DATA A0,12
007D:  DATA 75,10
007E:  DATA 00,01
007F:  DATA 50,34
0080:  DATA E9,36
0081:  DATA 20,31
0082:  DATA 61,37
0083:  DATA 20,32
0084:  DATA 61,10
0085:  DATA 6E,34
0086:  DATA 61,37
0087:  DATA 3A,10
0088:  DATA 25,36
0089:  DATA 75,10
008A:  DATA 00,01
008B:  DATA 4E,34
008C:  DATA E9,32
008D:  DATA 74,10
008E:  DATA E4,37
008F:  DATA A0,25
0090:  DATA 35,1D
0091:  DATA A0,12
0092:  DATA 75,10
0093:  DATA 00,01
0094:  DATA 4E,34
0095:  DATA E9,32
0096:  DATA 74,10
0097:  DATA E4,37
0098:  DATA A0,25
0099:  DATA 37,1D
009A:  DATA A0,12
009B:  DATA 75,10
009C:  DATA 00,01
009D:  DATA 50,34
009E:  DATA E9,36
009F:  DATA 20,31
00A0:  DATA 61,37
00A1:  DATA 20,32
00A2:  DATA 61,10
00A3:  DATA 6E,34
00A4:  DATA 61,37
00A5:  DATA 3A,10
00A6:  DATA 41,00
00A7:  DATA 4E,34
00A8:  DATA E9,32
00A9:  DATA 74,10
00AA:  DATA E4,37
00AB:  DATA A0,25
00AC:  DATA 35,1D
00AD:  DATA 20,10
00AE:  DATA 20,10
00AF:  DATA 20,00
00B0:  DATA 4E,34
00B1:  DATA E9,32
00B2:  DATA 74,10
00B3:  DATA E4,37
00B4:  DATA A0,25
00B5:  DATA 37,1D
00B6:  DATA 20,10
00B7:  DATA 20,10
00B8:  DATA 20,00
00B9:  DATA 50,34
00BA:  DATA E9,36
00BB:  DATA 20,31
00BC:  DATA 61,37
00BD:  DATA 20,32
00BE:  DATA 61,10
00BF:  DATA 6E,34
00C0:  DATA 61,37
00C1:  DATA 3A,10
00C2:  DATA 44,00
*
0178:  CLRF   78
0179:  CLRF   79
017A:  CLRF   77
017B:  CLRF   7A
017C:  MOVF   3A,W
017D:  BTFSS  03.2
017E:  GOTO   182
017F:  MOVF   39,W
0180:  BTFSC  03.2
0181:  GOTO   19C
0182:  MOVLW  10
0183:  MOVWF  3B
0184:  BCF    03.0
0185:  RLF    37,F
0186:  RLF    38,F
0187:  RLF    77,F
0188:  RLF    7A,F
0189:  MOVF   3A,W
018A:  SUBWF  7A,W
018B:  BTFSS  03.2
018C:  GOTO   18F
018D:  MOVF   39,W
018E:  SUBWF  77,W
018F:  BTFSS  03.0
0190:  GOTO   198
0191:  MOVF   39,W
0192:  SUBWF  77,F
0193:  BTFSS  03.0
0194:  DECF   7A,F
0195:  MOVF   3A,W
0196:  SUBWF  7A,F
0197:  BSF    03.0
0198:  RLF    78,F
0199:  RLF    79,F
019A:  DECFSZ 3B,F
019B:  GOTO   184
019C:  RETURN
*
01B6:  MOVF   0B,W
01B7:  MOVWF  38
01B8:  BCF    0B.7
01B9:  BSF    03.5
01BA:  BSF    03.6
01BB:  BSF    0C.7
01BC:  BSF    0C.0
01BD:  NOP
01BE:  NOP
01BF:  BCF    03.5
01C0:  BCF    03.6
01C1:  BTFSC  38.7
01C2:  BSF    0B.7
01C3:  BTFSC  03.0
01C4:  GOTO   1ED
01C5:  BSF    03.6
01C6:  MOVF   0C,W
01C7:  ANDLW  7F
01C8:  BCF    03.6
01C9:  MOVWF  38
01CA:  BSF    03.6
01CB:  MOVF   0D,W
01CC:  BCF    03.6
01CD:  MOVWF  39
01CE:  BSF    03.6
01CF:  MOVF   0F,W
01D0:  BCF    03.6
01D1:  MOVWF  3A
01D2:  MOVF   38,W
01D3:  MOVWF  40
01D4:  CALL   19D
01D5:  MOVF   39,W
01D6:  BSF    03.6
01D7:  MOVWF  0D
01D8:  BCF    03.6
01D9:  MOVF   3A,W
01DA:  BSF    03.6
01DB:  MOVWF  0F
01DC:  BCF    03.6
01DD:  MOVF   0B,W
01DE:  MOVWF  3B
01DF:  BCF    0B.7
01E0:  BSF    03.5
01E1:  BSF    03.6
01E2:  BSF    0C.7
01E3:  BSF    0C.0
01E4:  NOP
01E5:  NOP
01E6:  BCF    03.5
01E7:  BCF    03.6
01E8:  BTFSC  3B.7
01E9:  BSF    0B.7
01EA:  DECFSZ 37,F
01EB:  GOTO   1ED
01EC:  GOTO   20C
01ED:  BSF    03.6
01EE:  RLF    0C,W
01EF:  RLF    0E,W
01F0:  ANDLW  7F
01F1:  BCF    03.6
01F2:  MOVWF  38
01F3:  BSF    03.6
01F4:  MOVF   0D,W
01F5:  BCF    03.6
01F6:  MOVWF  39
01F7:  BSF    03.6
01F8:  MOVF   0F,W
01F9:  BCF    03.6
01FA:  MOVWF  3A
01FB:  MOVF   38,W
01FC:  MOVWF  40
01FD:  CALL   19D
01FE:  MOVF   39,W
01FF:  BSF    03.6
0200:  MOVWF  0D
0201:  BCF    03.6
0202:  MOVF   3A,W
0203:  BSF    03.6
0204:  MOVWF  0F
0205:  INCF   0D,F
0206:  BTFSC  03.2
0207:  INCF   0F,F
0208:  BCF    03.0
0209:  BCF    03.6
020A:  DECFSZ 37,F
020B:  GOTO   1B6
020C:  RETURN
020D:  MOVF   3A,W
020E:  CLRF   78
020F:  SUBWF  39,W
0210:  BTFSC  03.0
0211:  GOTO   215
0212:  MOVF   39,W
0213:  MOVWF  77
0214:  GOTO   221
0215:  CLRF   77
0216:  MOVLW  08
0217:  MOVWF  3B
0218:  RLF    39,F
0219:  RLF    77,F
021A:  MOVF   3A,W
021B:  SUBWF  77,W
021C:  BTFSC  03.0
021D:  MOVWF  77
021E:  RLF    78,F
021F:  DECFSZ 3B,F
0220:  GOTO   218
0221:  RETURN
0222:  MOVF   78,W
0223:  MOVF   37,W
0224:  MOVWF  39
0225:  MOVLW  64
0226:  MOVWF  3A
0227:  CALL   20D
0228:  MOVF   77,W
0229:  MOVWF  37
022A:  MOVF   78,W
022B:  MOVLW  30
022C:  BTFSS  03.2
022D:  GOTO   235
022E:  BTFSS  38.1
022F:  GOTO   23C
0230:  BTFSC  38.3
0231:  GOTO   23C
0232:  BTFSC  38.4
0233:  MOVLW  20
0234:  GOTO   238
0235:  BCF    38.3
0236:  BCF    38.4
0237:  BSF    38.0
0238:  ADDWF  78,F
0239:  MOVF   78,W
023A:  MOVWF  40
023B:  CALL   19D
023C:  MOVF   37,W
023D:  MOVWF  39
023E:  MOVLW  0A
023F:  MOVWF  3A
0240:  CALL   20D
0241:  MOVF   77,W
0242:  MOVWF  37
0243:  MOVF   78,W
0244:  MOVLW  30
0245:  BTFSS  03.2
0246:  GOTO   24D
0247:  BTFSC  38.3
0248:  GOTO   251
0249:  BTFSS  38.0
024A:  GOTO   251
024B:  BTFSC  38.4
024C:  MOVLW  20
024D:  ADDWF  78,F
024E:  MOVF   78,W
024F:  MOVWF  40
0250:  CALL   19D
0251:  MOVLW  30
0252:  ADDWF  37,F
0253:  MOVF   37,W
0254:  MOVWF  40
0255:  CALL   19D
0256:  RETURN
0257:  CLRF   3F
0258:  MOVF   04,W
0259:  MOVWF  3E
025A:  BCF    3F.0
025B:  BTFSC  03.7
025C:  BSF    3F.0
025D:  SWAPF  38,W
025E:  IORLW  F0
025F:  MOVWF  3A
0260:  ADDWF  3A,F
0261:  ADDLW  E2
0262:  MOVWF  3B
0263:  ADDLW  32
0264:  MOVWF  3D
0265:  MOVF   38,W
0266:  ANDLW  0F
0267:  ADDWF  3B,F
0268:  ADDWF  3B,F
0269:  ADDWF  3D,F
026A:  ADDLW  E9
026B:  MOVWF  3C
026C:  ADDWF  3C,F
026D:  ADDWF  3C,F
026E:  SWAPF  37,W
026F:  ANDLW  0F
0270:  ADDWF  3C,F
0271:  ADDWF  3D,F
0272:  RLF    3C,F
0273:  RLF    3D,F
0274:  COMF   3D,F
0275:  RLF    3D,F
0276:  MOVF   37,W
0277:  ANDLW  0F
0278:  ADDWF  3D,F
0279:  RLF    3A,F
027A:  MOVLW  07
027B:  MOVWF  39
027C:  MOVLW  0A
027D:  ADDWF  3D,F
027E:  DECF   3C,F
027F:  BTFSS  03.0
0280:  GOTO   27D
0281:  ADDWF  3C,F
0282:  DECF   3B,F
0283:  BTFSS  03.0
0284:  GOTO   281
0285:  ADDWF  3B,F
0286:  DECF   3A,F
0287:  BTFSS  03.0
0288:  GOTO   285
0289:  ADDWF  3A,F
028A:  DECF   39,F
028B:  BTFSS  03.0
028C:  GOTO   289
028D:  MOVLW  39
028E:  MOVWF  04
028F:  BCF    03.7
0290:  MOVLW  07
0291:  ANDWF  3E,W
0292:  BCF    3E.6
0293:  ADDWF  04,F
0294:  MOVLW  3D
0295:  SUBWF  04,W
0296:  BTFSC  03.2
0297:  BSF    3E.6
0298:  MOVF   00,W
0299:  MOVWF  77
029A:  BTFSS  03.2
029B:  GOTO   2A4
029C:  BTFSC  3E.6
029D:  GOTO   2A4
029E:  BTFSC  3E.4
029F:  GOTO   2B6
02A0:  BTFSC  3E.3
02A1:  GOTO   2A4
02A2:  MOVLW  20
02A3:  GOTO   2A7
02A4:  BSF    3E.3
02A5:  BCF    3E.4
02A6:  MOVLW  30
02A7:  ADDWF  77,F
02A8:  CLRF   38
02A9:  MOVF   04,W
02AA:  MOVWF  37
02AB:  BCF    38.0
02AC:  BTFSC  03.7
02AD:  BSF    38.0
02AE:  MOVF   77,W
02AF:  MOVWF  40
02B0:  CALL   19D
02B1:  MOVF   37,W
02B2:  MOVWF  04
02B3:  BCF    03.7
02B4:  BTFSC  38.0
02B5:  BSF    03.7
02B6:  INCF   04,F
02B7:  BTFSS  3E.6
02B8:  GOTO   294
02B9:  RETURN
02BA:  MOVF   0B,W
02BB:  MOVWF  37
02BC:  BCF    0B.7
02BD:  BSF    03.5
02BE:  BSF    03.6
02BF:  BSF    0C.7
02C0:  BSF    0C.0
02C1:  NOP
02C2:  NOP
02C3:  BCF    03.5
02C4:  BCF    03.6
02C5:  BTFSC  37.7
02C6:  BSF    0B.7
02C7:  BSF    03.6
02C8:  MOVF   0C,W
02C9:  ANDLW  7F
02CA:  BTFSC  03.2
02CB:  GOTO   30E
02CC:  BCF    03.6
02CD:  MOVWF  37
02CE:  BSF    03.6
02CF:  MOVF   0D,W
02D0:  BCF    03.6
02D1:  MOVWF  38
02D2:  BSF    03.6
02D3:  MOVF   0F,W
02D4:  BCF    03.6
02D5:  MOVWF  39
02D6:  MOVF   37,W
02D7:  MOVWF  40
02D8:  CALL   19D
02D9:  MOVF   38,W
02DA:  BSF    03.6
02DB:  MOVWF  0D
02DC:  BCF    03.6
02DD:  MOVF   39,W
02DE:  BSF    03.6
02DF:  MOVWF  0F
02E0:  BCF    03.6
02E1:  MOVF   0B,W
02E2:  MOVWF  3A
02E3:  BCF    0B.7
02E4:  BSF    03.5
02E5:  BSF    03.6
02E6:  BSF    0C.7
02E7:  BSF    0C.0
02E8:  NOP
02E9:  NOP
02EA:  BCF    03.5
02EB:  BCF    03.6
02EC:  BTFSC  3A.7
02ED:  BSF    0B.7
02EE:  BSF    03.6
02EF:  RLF    0C,W
02F0:  RLF    0E,W
02F1:  ANDLW  7F
02F2:  BTFSC  03.2
02F3:  GOTO   30E
02F4:  BCF    03.6
02F5:  MOVWF  37
02F6:  BSF    03.6
02F7:  MOVF   0D,W
02F8:  BCF    03.6
02F9:  MOVWF  38
02FA:  BSF    03.6
02FB:  MOVF   0F,W
02FC:  BCF    03.6
02FD:  MOVWF  39
02FE:  MOVF   37,W
02FF:  MOVWF  40
0300:  CALL   19D
0301:  MOVF   38,W
0302:  BSF    03.6
0303:  MOVWF  0D
0304:  BCF    03.6
0305:  MOVF   39,W
0306:  BSF    03.6
0307:  MOVWF  0F
0308:  INCF   0D,F
0309:  BTFSC  03.2
030A:  INCF   0F,F
030B:  BCF    03.6
030C:  GOTO   2BA
030D:  BSF    03.6
030E:  BCF    03.6
030F:  RETURN
.................... 
.................... #list
.................... 
.................... #fuses hs
.................... #use delay(clock=20M)
*
00C3:  MOVLW  41
00C4:  MOVWF  04
00C5:  BCF    03.7
00C6:  MOVF   00,W
00C7:  BTFSC  03.2
00C8:  GOTO   0D6
00C9:  MOVLW  06
00CA:  MOVWF  78
00CB:  CLRF   77
00CC:  DECFSZ 77,F
00CD:  GOTO   0CC
00CE:  DECFSZ 78,F
00CF:  GOTO   0CB
00D0:  MOVLW  7B
00D1:  MOVWF  77
00D2:  DECFSZ 77,F
00D3:  GOTO   0D2
00D4:  DECFSZ 00,F
00D5:  GOTO   0C9
00D6:  RETURN
.................... #use rs232(baud=9600,xmit=pin_c6,rcv=pin_c7)
.................... #define lcd_rs          pin_e2
.................... #define lcd_rw          pin_e1
.................... #define lcd_e           pin_e0
.................... #define output_lcd      output_d
.................... #include<TV_LCD.c>
.................... void lcd_command(int8 a)
.................... {
....................       output_low(lcd_rw);
00D7:  BSF    03.5
00D8:  BCF    09.1
00D9:  BCF    03.5
00DA:  BCF    09.1
....................       output_low(lcd_rs);
00DB:  BSF    03.5
00DC:  BCF    09.2
00DD:  BCF    03.5
00DE:  BCF    09.2
....................       output_lcd(a);
00DF:  BSF    03.5
00E0:  CLRF   08
00E1:  BCF    03.5
00E2:  MOVF   37,W
00E3:  MOVWF  08
....................       output_high(lcd_e);
00E4:  BSF    03.5
00E5:  BCF    09.0
00E6:  BCF    03.5
00E7:  BSF    09.0
....................       output_low(lcd_e);
00E8:  BSF    03.5
00E9:  BCF    09.0
00EA:  BCF    03.5
00EB:  BCF    09.0
....................       delay_ms(1);    
00EC:  MOVLW  01
00ED:  MOVWF  41
00EE:  CALL   0C3
00EF:  RETURN
.................... }
.................... void lcd_data(int8 a)
.................... {
....................       output_low(lcd_rw);
*
019D:  BSF    03.5
019E:  BCF    09.1
019F:  BCF    03.5
01A0:  BCF    09.1
....................       output_high(lcd_rs);
01A1:  BSF    03.5
01A2:  BCF    09.2
01A3:  BCF    03.5
01A4:  BSF    09.2
....................       output_lcd(a);
01A5:  BSF    03.5
01A6:  CLRF   08
01A7:  BCF    03.5
01A8:  MOVF   40,W
01A9:  MOVWF  08
....................       output_high(lcd_e);
01AA:  BSF    03.5
01AB:  BCF    09.0
01AC:  BCF    03.5
01AD:  BSF    09.0
....................       output_low(lcd_e);
01AE:  BSF    03.5
01AF:  BCF    09.0
01B0:  BCF    03.5
01B1:  BCF    09.0
....................       delay_ms(1);    
01B2:  MOVLW  01
01B3:  MOVWF  41
01B4:  CALL   0C3
01B5:  RETURN
.................... }
.................... void lcd_setup()
.................... {
....................       lcd_command(0x38); delay_ms(5);
*
00F0:  MOVLW  38
00F1:  MOVWF  37
00F2:  CALL   0D7
00F3:  MOVLW  05
00F4:  MOVWF  41
00F5:  CALL   0C3
....................       lcd_command(0x0c);
00F6:  MOVLW  0C
00F7:  MOVWF  37
00F8:  CALL   0D7
....................       lcd_command(0x01); delay_ms(2);
00F9:  MOVLW  01
00FA:  MOVWF  37
00FB:  CALL   0D7
00FC:  MOVLW  02
00FD:  MOVWF  41
00FE:  CALL   0C3
00FF:  BCF    0A.3
0100:  BCF    0A.4
0101:  GOTO   345 (RETURN)
.................... }
.................... 
.................... #include<TV_KEY4x4.c>
.................... unsigned int8 key_4x4()
0102:  MOVLW  FF
0103:  MOVWF  37
.................... {
....................    const unsigned int8 maquet[]={0xef,0xdf,0xbf,0x7f};
....................    unsigned int8 mp=0xff,cot;
....................    for(cot=0;cot<4;cot++)
0104:  CLRF   38
0105:  MOVF   38,W
0106:  SUBLW  03
0107:  BTFSS  03.0
0108:  GOTO   148
....................    {
....................    output_b(maquet[cot]);
0109:  MOVF   38,W
010A:  CALL   051
010B:  MOVWF  39
010C:  BSF    03.5
010D:  CLRF   06
010E:  BCF    03.5
010F:  MOVF   39,W
0110:  MOVWF  06
....................    while(input(pin_b0)==0) mp=cot*4;
0111:  BSF    03.5
0112:  BSF    06.0
0113:  BCF    03.5
0114:  BTFSC  06.0
0115:  GOTO   11C
0116:  RLF    38,W
0117:  MOVWF  37
0118:  RLF    37,F
0119:  MOVLW  FC
011A:  ANDWF  37,F
011B:  GOTO   111
....................    while(input(pin_b1)==0) mp=cot*4+1;
011C:  BSF    03.5
011D:  BSF    06.1
011E:  BCF    03.5
011F:  BTFSC  06.1
0120:  GOTO   12A
0121:  RLF    38,W
0122:  MOVWF  77
0123:  RLF    77,F
0124:  MOVLW  FC
0125:  ANDWF  77,F
0126:  MOVF   77,W
0127:  ADDLW  01
0128:  MOVWF  37
0129:  GOTO   11C
....................    while(input(pin_b2)==0) mp=cot*4+2;
012A:  BSF    03.5
012B:  BSF    06.2
012C:  BCF    03.5
012D:  BTFSC  06.2
012E:  GOTO   138
012F:  RLF    38,W
0130:  MOVWF  77
0131:  RLF    77,F
0132:  MOVLW  FC
0133:  ANDWF  77,F
0134:  MOVF   77,W
0135:  ADDLW  02
0136:  MOVWF  37
0137:  GOTO   12A
....................    while(input(pin_b3)==0) mp=cot*4+3;
0138:  BSF    03.5
0139:  BSF    06.3
013A:  BCF    03.5
013B:  BTFSC  06.3
013C:  GOTO   146
013D:  RLF    38,W
013E:  MOVWF  77
013F:  RLF    77,F
0140:  MOVLW  FC
0141:  ANDWF  77,F
0142:  MOVF   77,W
0143:  ADDLW  03
0144:  MOVWF  37
0145:  GOTO   138
0146:  INCF   38,F
0147:  GOTO   105
....................    }
....................    return mp;
0148:  MOVF   37,W
0149:  MOVWF  78
.................... }
.................... 
.................... unsigned int16 mp,tt=0;
.................... unsigned int8  kq5,kq7,dv,chuc,kq;
.................... #INT_RDA
.................... void ngatuart()
.................... {
....................    kq=getc();
*
0059:  BTFSS  0C.5
005A:  GOTO   059
005B:  MOVF   1A,W
005C:  MOVWF  33
005D:  BCF    0C.5
005E:  BCF    0A.3
005F:  BCF    0A.4
0060:  GOTO   02D
.................... }
.................... 
.................... void checkphim()
.................... {
.................... mp=key_4x4();
*
014A:  CLRF   2C
014B:  MOVF   78,W
014C:  MOVWF  2B
.................... if(mp==5) tt=5;
014D:  MOVF   2B,W
014E:  SUBLW  05
014F:  BTFSS  03.2
0150:  GOTO   157
0151:  MOVF   2C,F
0152:  BTFSS  03.2
0153:  GOTO   157
0154:  CLRF   2E
0155:  MOVLW  05
0156:  MOVWF  2D
.................... if(mp==7) tt=7;
0157:  MOVF   2B,W
0158:  SUBLW  07
0159:  BTFSS  03.2
015A:  GOTO   161
015B:  MOVF   2C,F
015C:  BTFSS  03.2
015D:  GOTO   161
015E:  CLRF   2E
015F:  MOVLW  07
0160:  MOVWF  2D
.................... if(mp==10) tt=10;
0161:  MOVF   2B,W
0162:  SUBLW  0A
0163:  BTFSS  03.2
0164:  GOTO   16B
0165:  MOVF   2C,F
0166:  BTFSS  03.2
0167:  GOTO   16B
0168:  CLRF   2E
0169:  MOVLW  0A
016A:  MOVWF  2D
.................... if(mp==13) tt=13;
016B:  MOVF   2B,W
016C:  SUBLW  0D
016D:  BTFSS  03.2
016E:  GOTO   175
016F:  MOVF   2C,F
0170:  BTFSS  03.2
0171:  GOTO   175
0172:  CLRF   2E
0173:  MOVLW  0D
0174:  MOVWF  2D
0175:  BCF    0A.3
0176:  BCF    0A.4
0177:  GOTO   34B (RETURN)
.................... }
.................... void main()
*
0310:  MOVF   03,W
0311:  ANDLW  1F
0312:  MOVWF  03
0313:  BSF    03.5
0314:  BSF    03.6
0315:  BSF    07.3
0316:  MOVLW  08
0317:  BCF    03.6
0318:  MOVWF  19
0319:  MOVLW  02
031A:  MOVWF  1A
031B:  MOVLW  A6
031C:  MOVWF  18
031D:  MOVLW  90
031E:  BCF    03.5
031F:  MOVWF  18
0320:  CLRF   2E
0321:  CLRF   2D
0322:  MOVLW  FF
0323:  MOVWF  34
0324:  CLRF   36
0325:  CLRF   35
0326:  BSF    03.5
0327:  BSF    03.6
0328:  MOVF   09,W
0329:  ANDLW  C0
032A:  MOVWF  09
032B:  BCF    03.6
032C:  BCF    1F.4
032D:  BCF    1F.5
032E:  MOVLW  00
032F:  BSF    03.6
0330:  MOVWF  08
0331:  BCF    03.5
0332:  CLRF   07
0333:  CLRF   08
0334:  CLRF   09
0335:  BCF    03.7
.................... {
.................... 
.................... set_tris_a(0xff);
0336:  MOVLW  FF
0337:  BSF    03.5
0338:  BCF    03.6
0339:  MOVWF  05
.................... set_tris_b(0xff);
033A:  MOVWF  06
.................... set_tris_c(0x80);
033B:  MOVLW  80
033C:  MOVWF  07
033D:  BCF    03.5
033E:  MOVWF  34
.................... set_tris_c(0x00);
033F:  MOVLW  00
0340:  BSF    03.5
0341:  MOVWF  07
0342:  BCF    03.5
0343:  MOVWF  34
.................... lcd_setup();
0344:  GOTO   0F0
.................... enable_interrupts(INT_RDA);
0345:  BSF    03.5
0346:  BSF    0C.5
.................... enable_interrupts(GLOBAL);
0347:  MOVLW  C0
0348:  BCF    03.5
0349:  IORWF  0B,F
.................... 
.................... 
....................    while(true)
....................    {
....................        checkphim();
034A:  GOTO   102
....................       dv=tt%10;
034B:  MOVF   2E,W
034C:  MOVWF  38
034D:  MOVF   2D,W
034E:  MOVWF  37
034F:  CLRF   3A
0350:  MOVLW  0A
0351:  MOVWF  39
0352:  CALL   178
0353:  MOVF   77,W
0354:  MOVWF  31
....................       chuc=tt/10;
0355:  MOVF   2E,W
0356:  MOVWF  38
0357:  MOVF   2D,W
0358:  MOVWF  37
0359:  CLRF   3A
035A:  MOVLW  0A
035B:  MOVWF  39
035C:  CALL   178
035D:  MOVF   78,W
035E:  MOVWF  32
....................       putc(chuc);
035F:  MOVF   32,W
0360:  BTFSS  0C.4
0361:  GOTO   360
0362:  MOVWF  19
....................       putc(dv);
0363:  MOVF   31,W
0364:  BTFSS  0C.4
0365:  GOTO   364
0366:  MOVWF  19
.................... //!
....................             if(tt==5)
0367:  MOVF   2D,W
0368:  SUBLW  05
0369:  BTFSS  03.2
036A:  GOTO   39A
036B:  MOVF   2E,F
036C:  BTFSS  03.2
036D:  GOTO   39A
....................             {
....................                lcd_command(0x80);
036E:  MOVLW  80
036F:  MOVWF  37
0370:  CALL   0D7
....................                printf(lcd_data,"Nhiet do K5: %u ",kq5);
0371:  MOVLW  61
0372:  BSF    03.6
0373:  MOVWF  0D
0374:  MOVLW  00
0375:  MOVWF  0F
0376:  BCF    03.0
0377:  MOVLW  0D
0378:  BCF    03.6
0379:  MOVWF  37
037A:  CALL   1B6
037B:  MOVF   2F,W
037C:  MOVWF  37
037D:  MOVLW  1B
037E:  MOVWF  38
037F:  CALL   222
0380:  MOVLW  20
0381:  MOVWF  40
0382:  CALL   19D
....................                lcd_command(0xd4);
0383:  MOVLW  D4
0384:  MOVWF  37
0385:  CALL   0D7
....................                 printf(lcd_data,"Phim ban da nhan: %lu ",tt);
0386:  MOVLW  6A
0387:  BSF    03.6
0388:  MOVWF  0D
0389:  MOVLW  00
038A:  MOVWF  0F
038B:  BCF    03.0
038C:  MOVLW  12
038D:  BCF    03.6
038E:  MOVWF  37
038F:  CALL   1B6
0390:  MOVLW  10
0391:  MOVWF  04
0392:  MOVF   2E,W
0393:  MOVWF  38
0394:  MOVF   2D,W
0395:  MOVWF  37
0396:  CALL   257
0397:  MOVLW  20
0398:  MOVWF  40
0399:  CALL   19D
....................       
....................             }
....................             if(tt==7)
039A:  MOVF   2D,W
039B:  SUBLW  07
039C:  BTFSS  03.2
039D:  GOTO   3CD
039E:  MOVF   2E,F
039F:  BTFSS  03.2
03A0:  GOTO   3CD
....................             {
....................                lcd_command(0x80);
03A1:  MOVLW  80
03A2:  MOVWF  37
03A3:  CALL   0D7
....................                printf(lcd_data,"Nhiet do K7: %u ",kq7);
03A4:  MOVLW  76
03A5:  BSF    03.6
03A6:  MOVWF  0D
03A7:  MOVLW  00
03A8:  MOVWF  0F
03A9:  BCF    03.0
03AA:  MOVLW  0D
03AB:  BCF    03.6
03AC:  MOVWF  37
03AD:  CALL   1B6
03AE:  MOVF   30,W
03AF:  MOVWF  37
03B0:  MOVLW  1B
03B1:  MOVWF  38
03B2:  CALL   222
03B3:  MOVLW  20
03B4:  MOVWF  40
03B5:  CALL   19D
....................                lcd_command(0xd4);
03B6:  MOVLW  D4
03B7:  MOVWF  37
03B8:  CALL   0D7
....................                printf(lcd_data,"Phim ban da nhan: %lu ",tt);
03B9:  MOVLW  7F
03BA:  BSF    03.6
03BB:  MOVWF  0D
03BC:  MOVLW  00
03BD:  MOVWF  0F
03BE:  BCF    03.0
03BF:  MOVLW  12
03C0:  BCF    03.6
03C1:  MOVWF  37
03C2:  CALL   1B6
03C3:  MOVLW  10
03C4:  MOVWF  04
03C5:  MOVF   2E,W
03C6:  MOVWF  38
03C7:  MOVF   2D,W
03C8:  MOVWF  37
03C9:  CALL   257
03CA:  MOVLW  20
03CB:  MOVWF  40
03CC:  CALL   19D
....................       
....................             }
....................             if(tt==10)
03CD:  MOVF   2D,W
03CE:  SUBLW  0A
03CF:  BTFSS  03.2
03D0:  GOTO   408
03D1:  MOVF   2E,F
03D2:  BTFSS  03.2
03D3:  GOTO   408
....................             {
....................                lcd_command(0x80);
03D4:  MOVLW  80
03D5:  MOVWF  37
03D6:  CALL   0D7
....................                printf(lcd_data,"Nhiet do K5: %u ",kq5);
03D7:  MOVLW  8B
03D8:  BSF    03.6
03D9:  MOVWF  0D
03DA:  MOVLW  00
03DB:  MOVWF  0F
03DC:  BCF    03.0
03DD:  MOVLW  0D
03DE:  BCF    03.6
03DF:  MOVWF  37
03E0:  CALL   1B6
03E1:  MOVF   2F,W
03E2:  MOVWF  37
03E3:  MOVLW  1B
03E4:  MOVWF  38
03E5:  CALL   222
03E6:  MOVLW  20
03E7:  MOVWF  40
03E8:  CALL   19D
....................                lcd_command(0xc0);
03E9:  MOVLW  C0
03EA:  MOVWF  37
03EB:  CALL   0D7
....................                printf(lcd_data,"Nhiet do K7: %u ",kq7);
03EC:  MOVLW  94
03ED:  BSF    03.6
03EE:  MOVWF  0D
03EF:  MOVLW  00
03F0:  MOVWF  0F
03F1:  BCF    03.0
03F2:  MOVLW  0D
03F3:  BCF    03.6
03F4:  MOVWF  37
03F5:  CALL   1B6
03F6:  MOVF   30,W
03F7:  MOVWF  37
03F8:  MOVLW  1B
03F9:  MOVWF  38
03FA:  CALL   222
03FB:  MOVLW  20
03FC:  MOVWF  40
03FD:  CALL   19D
....................                lcd_command(0xd4);
03FE:  MOVLW  D4
03FF:  MOVWF  37
0400:  CALL   0D7
....................                printf(lcd_data,"Phim ban da nhan: A");
0401:  MOVLW  9D
0402:  BSF    03.6
0403:  MOVWF  0D
0404:  MOVLW  00
0405:  MOVWF  0F
0406:  BCF    03.6
0407:  CALL   2BA
.................... 
....................             }
....................             if(tt==13)
0408:  MOVF   2D,W
0409:  SUBLW  0D
040A:  BTFSS  03.2
040B:  GOTO   42D
040C:  MOVF   2E,F
040D:  BTFSS  03.2
040E:  GOTO   42D
....................             {
....................                lcd_command(0x80);
040F:  MOVLW  80
0410:  MOVWF  37
0411:  CALL   0D7
....................                printf(lcd_data,"Nhiet do K5:     ");
0412:  MOVLW  A7
0413:  BSF    03.6
0414:  MOVWF  0D
0415:  MOVLW  00
0416:  MOVWF  0F
0417:  BCF    03.6
0418:  CALL   2BA
....................                lcd_command(0xc0);
0419:  MOVLW  C0
041A:  MOVWF  37
041B:  CALL   0D7
....................                printf(lcd_data,"Nhiet do K7:     ");
041C:  MOVLW  B0
041D:  BSF    03.6
041E:  MOVWF  0D
041F:  MOVLW  00
0420:  MOVWF  0F
0421:  BCF    03.6
0422:  CALL   2BA
....................                lcd_command(0xd4);
0423:  MOVLW  D4
0424:  MOVWF  37
0425:  CALL   0D7
....................                printf(lcd_data,"Phim ban da nhan: D");
0426:  MOVLW  B9
0427:  BSF    03.6
0428:  MOVWF  0D
0429:  MOVLW  00
042A:  MOVWF  0F
042B:  BCF    03.6
042C:  CALL   2BA
.................... 
....................             }
042D:  GOTO   34A
....................       
.................... //!   
....................    }
.................... }
042E:  SLEEP

Configuration Fuses:
   Word  1: 2FE2   HS NOWDT PUT MCLR NOPROTECT NOCPD BROWNOUT IESO FCMEN NOLVP NODEBUG
   Word  2: 3FFF   BORV40 NOWRT
