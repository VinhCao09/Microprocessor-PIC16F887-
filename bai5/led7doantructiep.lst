CCS PCM C Compiler, Version 5.101, 43599               11-Apr-23 14:15

               Filename:   D:\processor\bai5\led7doantructiep.lst

               ROM used:   951 words (12%)
                           Largest free fragment is 2048
               RAM used:   27 (7%) at main() level
                           32 (9%) worst case
               Stack used: 2 locations
               Stack size: 8

*
0000:  MOVLW  03
0001:  MOVWF  0A
0002:  GOTO   360
0003:  NOP
.................... #include<16f887.h>
.................... //////////// Standard Header file for the PIC16F887 device ////////////////
.................... ///////////////////////////////////////////////////////////////////////////
.................... ////        (C) Copyright 1996, 2020 Custom Computer Services          ////
.................... //// This source code may only be used by licensed users of the CCS C  ////
.................... //// compiler.  This source code may only be distributed to other      ////
.................... //// licensed users of the CCS C compiler.  No other use, reproduction ////
.................... //// or distribution is permitted without written permission.          ////
.................... //// Derivative programs created using this software in object code    ////
.................... //// form are not restricted in any way.                               ////
.................... ///////////////////////////////////////////////////////////////////////////
.................... #device PIC16F887
*
03A9:  BSF    0A.0
03AA:  BSF    0A.1
03AB:  BCF    0A.2
03AC:  ADDWF  02,F
03AD:  GOTO   393
03AE:  GOTO   395
03AF:  GOTO   397
03B0:  GOTO   399
03B1:  GOTO   39B
03B2:  GOTO   39D
03B3:  GOTO   39F
03B4:  GOTO   3A1
03B5:  GOTO   3A3
03B6:  GOTO   3A5
.................... 
.................... #list
.................... 
.................... #fuses intrc_io
.................... #use delay(clock=8M)
*
0004:  MOVLW  36
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   017
000A:  MOVLW  02
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  97
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  DECFSZ 00,F
0016:  GOTO   00A
0017:  RETURN
.................... int32 i,LED,a,j,LED1;
.................... int count=1;
.................... const unsigned int8 ma7doan[10]={0xC0,0XF9,0XA4,0XB0,0X99,0X92,0X82,0XF8,0X80,0X90};
.................... //xu ly nut up down
.................... void XULY_NUTNHAN()
.................... {
....................    if(input(pin_e0)==0) //phim up
0018:  BSF    03.5
0019:  BSF    09.0
001A:  BCF    03.5
001B:  BTFSC  09.0
001C:  GOTO   032
....................    {
....................       delay_ms(20);
001D:  MOVLW  14
001E:  MOVWF  36
001F:  CALL   004
....................       if(input(pin_e0)==0)
0020:  BSF    03.5
0021:  BSF    09.0
0022:  BCF    03.5
0023:  BTFSC  09.0
0024:  GOTO   031
....................       {
....................       count++;
0025:  INCF   34,F
....................       while(input(pin_e0)==0);
0026:  BSF    03.5
0027:  BSF    09.0
0028:  BCF    03.5
0029:  BTFSS  09.0
002A:  GOTO   026
....................       if (count==11) count=1;
002B:  MOVF   34,W
002C:  SUBLW  0B
002D:  BTFSS  03.2
002E:  GOTO   031
002F:  MOVLW  01
0030:  MOVWF  34
....................       }
....................    }
0031:  GOTO   04A
....................    else if(input(pin_e1)==0) //phim down
0032:  BSF    03.5
0033:  BSF    09.1
0034:  BCF    03.5
0035:  BTFSC  09.1
0036:  GOTO   04A
....................    {
....................       delay_ms(20);
0037:  MOVLW  14
0038:  MOVWF  36
0039:  CALL   004
....................       if(input(pin_e1)==0)
003A:  BSF    03.5
003B:  BSF    09.1
003C:  BCF    03.5
003D:  BTFSC  09.1
003E:  GOTO   04A
....................       {
....................       count--;
003F:  DECF   34,F
....................       while(input(pin_e1)==0);
0040:  BSF    03.5
0041:  BSF    09.1
0042:  BCF    03.5
0043:  BTFSS  09.1
0044:  GOTO   040
....................       if (count==0) count=10;
0045:  MOVF   34,F
0046:  BTFSS  03.2
0047:  GOTO   04A
0048:  MOVLW  0A
0049:  MOVWF  34
....................       }
....................    }
004A:  RETURN
.................... }
.................... //xuat ma 7 doan ra
.................... void xuatma7doan()
.................... {
.................... //!output_a(ma7doan[count/1%10]); //led7doan hang don vi
.................... //!output_b(ma7doan[count/10%10]); //led7doan hang chuc
.................... output_a(0xff-1-2-32-64);
004B:  BSF    03.5
004C:  CLRF   05
004D:  MOVLW  9C
004E:  BCF    03.5
004F:  MOVWF  05
0050:  RETURN
.................... }
....................    
....................    
.................... 
.................... void choptat()
.................... {
....................    for(i=0;i<3;i++)
0051:  CLRF   23
0052:  CLRF   22
0053:  CLRF   21
0054:  CLRF   20
0055:  MOVF   23,F
0056:  BTFSS  03.2
0057:  GOTO   09B
0058:  MOVF   22,F
0059:  BTFSS  03.2
005A:  GOTO   09B
005B:  MOVF   21,F
005C:  BTFSS  03.2
005D:  GOTO   09B
005E:  MOVF   20,W
005F:  SUBLW  02
0060:  BTFSS  03.0
0061:  GOTO   09B
....................    {
....................    
....................    led=0xFFFF; //1111 1111 1111 1111 1111 1111
0062:  CLRF   27
0063:  CLRF   26
0064:  MOVLW  FF
0065:  MOVWF  25
0066:  MOVWF  24
....................    output_d(LED);
0067:  BSF    03.5
0068:  CLRF   08
0069:  BCF    03.5
006A:  MOVF   24,W
006B:  MOVWF  08
....................    output_c(LED>>8);
006C:  CLRF   3A
006D:  MOVLW  00
006E:  MOVWF  35
006F:  BSF    03.5
0070:  CLRF   07
0071:  BCF    03.5
0072:  MOVF   25,W
0073:  MOVWF  07
....................    delay_ms(200);
0074:  MOVLW  C8
0075:  MOVWF  36
0076:  CALL   004
....................    XULY_NUTNHAN();
0077:  CALL   018
....................    led=0x0000; //0000 0000 0000 0000 0000 0000
0078:  CLRF   27
0079:  CLRF   26
007A:  CLRF   25
007B:  CLRF   24
....................    output_d(LED);
007C:  BSF    03.5
007D:  CLRF   08
007E:  BCF    03.5
007F:  MOVF   24,W
0080:  MOVWF  08
....................    output_c(LED>>8);
0081:  CLRF   3A
0082:  MOVLW  00
0083:  MOVWF  35
0084:  BSF    03.5
0085:  CLRF   07
0086:  BCF    03.5
0087:  MOVF   25,W
0088:  MOVWF  07
....................    delay_ms(200);
0089:  MOVLW  C8
008A:  MOVWF  36
008B:  CALL   004
....................    XULY_NUTNHAN();
008C:  CALL   018
....................    xuatma7doan();
008D:  CALL   04B
....................    if(count!=1) break;
008E:  DECFSZ 34,W
008F:  GOTO   091
0090:  GOTO   092
0091:  GOTO   09B
0092:  MOVLW  01
0093:  ADDWF  20,F
0094:  BTFSC  03.0
0095:  INCF   21,F
0096:  BTFSC  03.2
0097:  INCF   22,F
0098:  BTFSC  03.2
0099:  INCF   23,F
009A:  GOTO   055
....................    }
009B:  BCF    0A.3
009C:  BCF    0A.4
009D:  GOTO   3A6 (RETURN)
.................... }
.................... 
.................... void sangdanpst()
.................... {
.................... LED=0x0001; //0000 0000 0000 0000 0000 0001
009E:  CLRF   27
009F:  CLRF   26
00A0:  CLRF   25
00A1:  MOVLW  01
00A2:  MOVWF  24
....................    for(i=0;i<=16;i++)
00A3:  CLRF   23
00A4:  CLRF   22
00A5:  CLRF   21
00A6:  CLRF   20
00A7:  MOVF   23,F
00A8:  BTFSS  03.2
00A9:  GOTO   0F1
00AA:  MOVF   22,F
00AB:  BTFSS  03.2
00AC:  GOTO   0F1
00AD:  MOVF   21,F
00AE:  BTFSS  03.2
00AF:  GOTO   0F1
00B0:  MOVF   20,W
00B1:  SUBLW  10
00B2:  BTFSS  03.0
00B3:  GOTO   0F1
....................    {
....................    LED=(LED<<1)+0x01;
00B4:  BCF    03.0
00B5:  RLF    24,W
00B6:  MOVWF  37
00B7:  RLF    25,W
00B8:  MOVWF  38
00B9:  RLF    26,W
00BA:  MOVWF  39
00BB:  RLF    27,W
00BC:  MOVWF  3A
00BD:  MOVLW  01
00BE:  ADDWF  37,W
00BF:  MOVWF  24
00C0:  MOVF   38,W
00C1:  MOVWF  25
00C2:  MOVLW  00
00C3:  BTFSC  03.0
00C4:  MOVLW  01
00C5:  ADDWF  25,F
00C6:  MOVF   39,W
00C7:  MOVWF  26
00C8:  MOVLW  00
00C9:  BTFSC  03.0
00CA:  MOVLW  01
00CB:  ADDWF  26,F
00CC:  MOVF   3A,W
00CD:  MOVWF  27
00CE:  MOVLW  00
00CF:  BTFSC  03.0
00D0:  MOVLW  01
00D1:  ADDWF  27,F
....................    output_d(LED);
00D2:  BSF    03.5
00D3:  CLRF   08
00D4:  BCF    03.5
00D5:  MOVF   24,W
00D6:  MOVWF  08
....................    output_c(LED>>8);
00D7:  CLRF   3A
00D8:  MOVLW  00
00D9:  MOVWF  35
00DA:  BSF    03.5
00DB:  CLRF   07
00DC:  BCF    03.5
00DD:  MOVF   25,W
00DE:  MOVWF  07
....................    delay_ms(200);
00DF:  MOVLW  C8
00E0:  MOVWF  36
00E1:  CALL   004
....................    XULY_NUTNHAN();
00E2:  CALL   018
....................    xuatma7doan();
00E3:  CALL   04B
....................    if(count!=2) break;
00E4:  MOVF   34,W
00E5:  SUBLW  02
00E6:  BTFSS  03.2
00E7:  GOTO   0F1
00E8:  MOVLW  01
00E9:  ADDWF  20,F
00EA:  BTFSC  03.0
00EB:  INCF   21,F
00EC:  BTFSC  03.2
00ED:  INCF   22,F
00EE:  BTFSC  03.2
00EF:  INCF   23,F
00F0:  GOTO   0A7
....................    }
00F1:  BCF    0A.3
00F2:  BCF    0A.4
00F3:  GOTO   3A6 (RETURN)
.................... }
.................... void sangdantsp()
.................... {
....................    for(i=0;i<=24;i++)
*
0137:  CLRF   23
0138:  CLRF   22
0139:  CLRF   21
013A:  CLRF   20
013B:  MOVF   23,F
013C:  BTFSS  03.2
013D:  GOTO   183
013E:  MOVF   22,F
013F:  BTFSS  03.2
0140:  GOTO   183
0141:  MOVF   21,F
0142:  BTFSS  03.2
0143:  GOTO   183
0144:  MOVF   20,W
0145:  SUBLW  18
0146:  BTFSS  03.0
0147:  GOTO   183
....................    {
.................... 
....................    LED=~(0xffff>>i);
0148:  CLRF   7A
0149:  CLRF   79
014A:  MOVLW  FF
014B:  MOVWF  78
014C:  MOVWF  77
014D:  MOVF   20,W
014E:  MOVWF  36
014F:  BTFSC  03.2
0150:  GOTO   158
0151:  BCF    03.0
0152:  RRF    7A,F
0153:  RRF    79,F
0154:  RRF    78,F
0155:  RRF    77,F
0156:  DECFSZ 36,F
0157:  GOTO   151
0158:  MOVF   77,W
0159:  MOVWF  24
015A:  COMF   24,F
015B:  MOVF   78,W
015C:  MOVWF  25
015D:  COMF   25,F
015E:  MOVF   79,W
015F:  MOVWF  26
0160:  COMF   26,F
0161:  MOVF   7A,W
0162:  MOVWF  27
0163:  COMF   27,F
....................    if(count!=4) break;
0164:  MOVF   34,W
0165:  SUBLW  04
0166:  BTFSS  03.2
0167:  GOTO   183
....................     output_d(LED);
0168:  BSF    03.5
0169:  CLRF   08
016A:  BCF    03.5
016B:  MOVF   24,W
016C:  MOVWF  08
....................    output_c(LED>>8);
016D:  CLRF   3A
016E:  MOVLW  00
016F:  MOVWF  35
0170:  BSF    03.5
0171:  CLRF   07
0172:  BCF    03.5
0173:  MOVF   25,W
0174:  MOVWF  07
....................    delay_ms(200);
0175:  MOVLW  C8
0176:  MOVWF  36
0177:  CALL   004
....................    XULY_NUTNHAN();
0178:  CALL   018
....................    xuatma7doan();
0179:  CALL   04B
017A:  MOVLW  01
017B:  ADDWF  20,F
017C:  BTFSC  03.0
017D:  INCF   21,F
017E:  BTFSC  03.2
017F:  INCF   22,F
0180:  BTFSC  03.2
0181:  INCF   23,F
0182:  GOTO   13B
....................    
....................    }
0183:  BCF    0A.3
0184:  BCF    0A.4
0185:  GOTO   3A6 (RETURN)
....................  }
....................    
.................... void tatdanpst()
.................... {
....................    for(i=0;i<=16;i++)
0186:  CLRF   23
0187:  CLRF   22
0188:  CLRF   21
0189:  CLRF   20
018A:  MOVF   23,F
018B:  BTFSS  03.2
018C:  GOTO   1C6
018D:  MOVF   22,F
018E:  BTFSS  03.2
018F:  GOTO   1C6
0190:  MOVF   21,F
0191:  BTFSS  03.2
0192:  GOTO   1C6
0193:  MOVF   20,W
0194:  SUBLW  10
0195:  BTFSS  03.0
0196:  GOTO   1C6
....................    {
.................... 
....................  
....................    LED=0xffff<<i; //1111 1111 1111 1111 1111 1111
0197:  CLRF   27
0198:  CLRF   26
0199:  MOVLW  FF
019A:  MOVWF  25
019B:  MOVWF  24
019C:  MOVF   20,W
019D:  MOVWF  36
019E:  BTFSC  03.2
019F:  GOTO   1A7
01A0:  BCF    03.0
01A1:  RLF    24,F
01A2:  RLF    25,F
01A3:  RLF    26,F
01A4:  RLF    27,F
01A5:  DECFSZ 36,F
01A6:  GOTO   1A0
....................    output_d(LED);
01A7:  BSF    03.5
01A8:  CLRF   08
01A9:  BCF    03.5
01AA:  MOVF   24,W
01AB:  MOVWF  08
....................    output_c(LED>>8);
01AC:  CLRF   3A
01AD:  MOVLW  00
01AE:  MOVWF  35
01AF:  BSF    03.5
01B0:  CLRF   07
01B1:  BCF    03.5
01B2:  MOVF   25,W
01B3:  MOVWF  07
....................    delay_ms(200);
01B4:  MOVLW  C8
01B5:  MOVWF  36
01B6:  CALL   004
....................    XULY_NUTNHAN();
01B7:  CALL   018
....................    xuatma7doan();
01B8:  CALL   04B
....................    if(count!=5) break;
01B9:  MOVF   34,W
01BA:  SUBLW  05
01BB:  BTFSS  03.2
01BC:  GOTO   1C6
01BD:  MOVLW  01
01BE:  ADDWF  20,F
01BF:  BTFSC  03.0
01C0:  INCF   21,F
01C1:  BTFSC  03.2
01C2:  INCF   22,F
01C3:  BTFSC  03.2
01C4:  INCF   23,F
01C5:  GOTO   18A
....................    }
01C6:  BCF    0A.3
01C7:  BCF    0A.4
01C8:  GOTO   3A6 (RETURN)
.................... }
.................... 
.................... void tatdantsp()
.................... {
....................    for(i=0;i<=16;i++)
*
00F4:  CLRF   23
00F5:  CLRF   22
00F6:  CLRF   21
00F7:  CLRF   20
00F8:  MOVF   23,F
00F9:  BTFSS  03.2
00FA:  GOTO   134
00FB:  MOVF   22,F
00FC:  BTFSS  03.2
00FD:  GOTO   134
00FE:  MOVF   21,F
00FF:  BTFSS  03.2
0100:  GOTO   134
0101:  MOVF   20,W
0102:  SUBLW  10
0103:  BTFSS  03.0
0104:  GOTO   134
....................    {
.................... 
.................... 
....................    LED=0xffff>>i;
0105:  CLRF   27
0106:  CLRF   26
0107:  MOVLW  FF
0108:  MOVWF  25
0109:  MOVWF  24
010A:  MOVF   20,W
010B:  MOVWF  36
010C:  BTFSC  03.2
010D:  GOTO   115
010E:  BCF    03.0
010F:  RRF    27,F
0110:  RRF    26,F
0111:  RRF    25,F
0112:  RRF    24,F
0113:  DECFSZ 36,F
0114:  GOTO   10E
....................    output_d(LED);
0115:  BSF    03.5
0116:  CLRF   08
0117:  BCF    03.5
0118:  MOVF   24,W
0119:  MOVWF  08
....................    output_c(LED>>8);
011A:  CLRF   3A
011B:  MOVLW  00
011C:  MOVWF  35
011D:  BSF    03.5
011E:  CLRF   07
011F:  BCF    03.5
0120:  MOVF   25,W
0121:  MOVWF  07
....................    delay_ms(200);
0122:  MOVLW  C8
0123:  MOVWF  36
0124:  CALL   004
....................    XULY_NUTNHAN();
0125:  CALL   018
....................    xuatma7doan();
0126:  CALL   04B
....................    if(count!=3) break;
0127:  MOVF   34,W
0128:  SUBLW  03
0129:  BTFSS  03.2
012A:  GOTO   134
012B:  MOVLW  01
012C:  ADDWF  20,F
012D:  BTFSC  03.0
012E:  INCF   21,F
012F:  BTFSC  03.2
0130:  INCF   22,F
0131:  BTFSC  03.2
0132:  INCF   23,F
0133:  GOTO   0F8
....................    }
0134:  BCF    0A.3
0135:  BCF    0A.4
0136:  GOTO   3A6 (RETURN)
.................... }
....................  
.................... void sangdichpst()
.................... {
....................    for(i=0;i<=16;i++)
*
01C9:  CLRF   23
01CA:  CLRF   22
01CB:  CLRF   21
01CC:  CLRF   20
01CD:  MOVF   23,F
01CE:  BTFSS  03.2
01CF:  GOTO   209
01D0:  MOVF   22,F
01D1:  BTFSS  03.2
01D2:  GOTO   209
01D3:  MOVF   21,F
01D4:  BTFSS  03.2
01D5:  GOTO   209
01D6:  MOVF   20,W
01D7:  SUBLW  10
01D8:  BTFSS  03.0
01D9:  GOTO   209
....................    {
.................... 
.................... 
....................    LED=0x0001<<i; 
01DA:  CLRF   27
01DB:  CLRF   26
01DC:  CLRF   25
01DD:  MOVLW  01
01DE:  MOVWF  24
01DF:  MOVF   20,W
01E0:  MOVWF  36
01E1:  BTFSC  03.2
01E2:  GOTO   1EA
01E3:  BCF    03.0
01E4:  RLF    24,F
01E5:  RLF    25,F
01E6:  RLF    26,F
01E7:  RLF    27,F
01E8:  DECFSZ 36,F
01E9:  GOTO   1E3
....................    output_d(LED);
01EA:  BSF    03.5
01EB:  CLRF   08
01EC:  BCF    03.5
01ED:  MOVF   24,W
01EE:  MOVWF  08
....................    output_c(LED>>8);
01EF:  CLRF   3A
01F0:  MOVLW  00
01F1:  MOVWF  35
01F2:  BSF    03.5
01F3:  CLRF   07
01F4:  BCF    03.5
01F5:  MOVF   25,W
01F6:  MOVWF  07
....................    delay_ms(200);
01F7:  MOVLW  C8
01F8:  MOVWF  36
01F9:  CALL   004
....................    XULY_NUTNHAN();
01FA:  CALL   018
....................    xuatma7doan();
01FB:  CALL   04B
....................    if(count!=6) break;
01FC:  MOVF   34,W
01FD:  SUBLW  06
01FE:  BTFSS  03.2
01FF:  GOTO   209
0200:  MOVLW  01
0201:  ADDWF  20,F
0202:  BTFSC  03.0
0203:  INCF   21,F
0204:  BTFSC  03.2
0205:  INCF   22,F
0206:  BTFSC  03.2
0207:  INCF   23,F
0208:  GOTO   1CD
....................    }
0209:  BCF    0A.3
020A:  BCF    0A.4
020B:  GOTO   3A6 (RETURN)
.................... }
.................... 
.................... void sangdichtsp()
.................... {
....................    for(i=0;i<=16;i++)
020C:  CLRF   23
020D:  CLRF   22
020E:  CLRF   21
020F:  CLRF   20
0210:  MOVF   23,F
0211:  BTFSS  03.2
0212:  GOTO   24D
0213:  MOVF   22,F
0214:  BTFSS  03.2
0215:  GOTO   24D
0216:  MOVF   21,F
0217:  BTFSS  03.2
0218:  GOTO   24D
0219:  MOVF   20,W
021A:  SUBLW  10
021B:  BTFSS  03.0
021C:  GOTO   24D
....................    {
.................... 
.................... 
....................    LED=0x8001>>i;  
021D:  CLRF   27
021E:  CLRF   26
021F:  MOVLW  80
0220:  MOVWF  25
0221:  MOVLW  01
0222:  MOVWF  24
0223:  MOVF   20,W
0224:  MOVWF  36
0225:  BTFSC  03.2
0226:  GOTO   22E
0227:  BCF    03.0
0228:  RRF    27,F
0229:  RRF    26,F
022A:  RRF    25,F
022B:  RRF    24,F
022C:  DECFSZ 36,F
022D:  GOTO   227
....................    output_d(LED);
022E:  BSF    03.5
022F:  CLRF   08
0230:  BCF    03.5
0231:  MOVF   24,W
0232:  MOVWF  08
....................    output_c(LED>>8);
0233:  CLRF   3A
0234:  MOVLW  00
0235:  MOVWF  35
0236:  BSF    03.5
0237:  CLRF   07
0238:  BCF    03.5
0239:  MOVF   25,W
023A:  MOVWF  07
....................    delay_ms(200);
023B:  MOVLW  C8
023C:  MOVWF  36
023D:  CALL   004
....................    XULY_NUTNHAN();
023E:  CALL   018
....................    xuatma7doan();
023F:  CALL   04B
....................    if(count!=7) break;
0240:  MOVF   34,W
0241:  SUBLW  07
0242:  BTFSS  03.2
0243:  GOTO   24D
0244:  MOVLW  01
0245:  ADDWF  20,F
0246:  BTFSC  03.0
0247:  INCF   21,F
0248:  BTFSC  03.2
0249:  INCF   22,F
024A:  BTFSC  03.2
024B:  INCF   23,F
024C:  GOTO   210
....................    }
024D:  BCF    0A.3
024E:  BCF    0A.4
024F:  GOTO   3A6 (RETURN)
.................... }
.................... 
.................... void sangdich3ledpst()
.................... {
....................    for(i=0;i<=24;i++)
0250:  CLRF   23
0251:  CLRF   22
0252:  CLRF   21
0253:  CLRF   20
0254:  MOVF   23,F
0255:  BTFSS  03.2
0256:  GOTO   290
0257:  MOVF   22,F
0258:  BTFSS  03.2
0259:  GOTO   290
025A:  MOVF   21,F
025B:  BTFSS  03.2
025C:  GOTO   290
025D:  MOVF   20,W
025E:  SUBLW  18
025F:  BTFSS  03.0
0260:  GOTO   290
....................    {
....................    LED=0x0007<<i;
0261:  CLRF   27
0262:  CLRF   26
0263:  CLRF   25
0264:  MOVLW  07
0265:  MOVWF  24
0266:  MOVF   20,W
0267:  MOVWF  36
0268:  BTFSC  03.2
0269:  GOTO   271
026A:  BCF    03.0
026B:  RLF    24,F
026C:  RLF    25,F
026D:  RLF    26,F
026E:  RLF    27,F
026F:  DECFSZ 36,F
0270:  GOTO   26A
....................    output_d(LED);
0271:  BSF    03.5
0272:  CLRF   08
0273:  BCF    03.5
0274:  MOVF   24,W
0275:  MOVWF  08
....................    output_c(LED>>8);
0276:  CLRF   3A
0277:  MOVLW  00
0278:  MOVWF  35
0279:  BSF    03.5
027A:  CLRF   07
027B:  BCF    03.5
027C:  MOVF   25,W
027D:  MOVWF  07
....................    delay_ms(200);
027E:  MOVLW  C8
027F:  MOVWF  36
0280:  CALL   004
....................    XULY_NUTNHAN();
0281:  CALL   018
....................    xuatma7doan();
0282:  CALL   04B
....................    if(count!=8) break;
0283:  MOVF   34,W
0284:  SUBLW  08
0285:  BTFSS  03.2
0286:  GOTO   290
0287:  MOVLW  01
0288:  ADDWF  20,F
0289:  BTFSC  03.0
028A:  INCF   21,F
028B:  BTFSC  03.2
028C:  INCF   22,F
028D:  BTFSC  03.2
028E:  INCF   23,F
028F:  GOTO   254
....................    }
0290:  BCF    0A.3
0291:  BCF    0A.4
0292:  GOTO   3A6 (RETURN)
.................... }
.................... 
.................... void sangdich3ledtsp()
.................... {
....................    for(i=0;i<=16;i++)
0293:  CLRF   23
0294:  CLRF   22
0295:  CLRF   21
0296:  CLRF   20
0297:  MOVF   23,F
0298:  BTFSS  03.2
0299:  GOTO   2D3
029A:  MOVF   22,F
029B:  BTFSS  03.2
029C:  GOTO   2D3
029D:  MOVF   21,F
029E:  BTFSS  03.2
029F:  GOTO   2D3
02A0:  MOVF   20,W
02A1:  SUBLW  10
02A2:  BTFSS  03.0
02A3:  GOTO   2D3
....................    { 
.................... 
.................... 
....................    LED=0xE000>>i;
02A4:  CLRF   27
02A5:  CLRF   26
02A6:  MOVLW  E0
02A7:  MOVWF  25
02A8:  CLRF   24
02A9:  MOVF   20,W
02AA:  MOVWF  36
02AB:  BTFSC  03.2
02AC:  GOTO   2B4
02AD:  BCF    03.0
02AE:  RRF    27,F
02AF:  RRF    26,F
02B0:  RRF    25,F
02B1:  RRF    24,F
02B2:  DECFSZ 36,F
02B3:  GOTO   2AD
....................    output_d(LED);
02B4:  BSF    03.5
02B5:  CLRF   08
02B6:  BCF    03.5
02B7:  MOVF   24,W
02B8:  MOVWF  08
....................    output_c(LED>>8);
02B9:  CLRF   3A
02BA:  MOVLW  00
02BB:  MOVWF  35
02BC:  BSF    03.5
02BD:  CLRF   07
02BE:  BCF    03.5
02BF:  MOVF   25,W
02C0:  MOVWF  07
....................    delay_ms(200);
02C1:  MOVLW  C8
02C2:  MOVWF  36
02C3:  CALL   004
....................    XULY_NUTNHAN();
02C4:  CALL   018
....................    xuatma7doan();
02C5:  CALL   04B
....................    if(count!=9) break;
02C6:  MOVF   34,W
02C7:  SUBLW  09
02C8:  BTFSS  03.2
02C9:  GOTO   2D3
02CA:  MOVLW  01
02CB:  ADDWF  20,F
02CC:  BTFSC  03.0
02CD:  INCF   21,F
02CE:  BTFSC  03.2
02CF:  INCF   22,F
02D0:  BTFSC  03.2
02D1:  INCF   23,F
02D2:  GOTO   297
....................    }
02D3:  BCF    0A.3
02D4:  BCF    0A.4
02D5:  GOTO   3A6 (RETURN)
.................... } 
.................... 
.................... void sangdontsp()
.................... {
.................... a=0;
02D6:  CLRF   2B
02D7:  CLRF   2A
02D8:  CLRF   29
02D9:  CLRF   28
.................... for(i=0;i<16;i++)
02DA:  CLRF   23
02DB:  CLRF   22
02DC:  CLRF   21
02DD:  CLRF   20
02DE:  MOVF   23,F
02DF:  BTFSS  03.2
02E0:  GOTO   35D
02E1:  MOVF   22,F
02E2:  BTFSS  03.2
02E3:  GOTO   35D
02E4:  MOVF   21,F
02E5:  BTFSS  03.2
02E6:  GOTO   35D
02E7:  MOVF   20,W
02E8:  SUBLW  0F
02E9:  BTFSS  03.0
02EA:  GOTO   35D
....................    {
....................    
....................    LED1=0x8000; 
02EB:  CLRF   33
02EC:  CLRF   32
02ED:  MOVLW  80
02EE:  MOVWF  31
02EF:  CLRF   30
....................    for(j=0;j<16-i;j++)
02F0:  CLRF   2F
02F1:  CLRF   2E
02F2:  CLRF   2D
02F3:  CLRF   2C
02F4:  MOVF   20,W
02F5:  SUBLW  10
02F6:  MOVWF  77
02F7:  CLRF   78
02F8:  MOVF   21,W
02F9:  BTFSS  03.0
02FA:  INCFSZ 21,W
02FB:  SUBWF  78,F
02FC:  CLRF   79
02FD:  MOVF   22,W
02FE:  BTFSS  03.0
02FF:  INCFSZ 22,W
0300:  SUBWF  79,F
0301:  CLRF   7A
0302:  MOVF   23,W
0303:  BTFSS  03.0
0304:  INCFSZ 23,W
0305:  SUBWF  7A,F
0306:  MOVF   2F,W
0307:  SUBWF  7A,W
0308:  BTFSS  03.0
0309:  GOTO   34C
030A:  BTFSS  03.2
030B:  GOTO   31C
030C:  MOVF   2E,W
030D:  SUBWF  79,W
030E:  BTFSS  03.0
030F:  GOTO   34C
0310:  BTFSS  03.2
0311:  GOTO   31C
0312:  MOVF   2D,W
0313:  SUBWF  78,W
0314:  BTFSS  03.0
0315:  GOTO   34C
0316:  BTFSS  03.2
0317:  GOTO   31C
0318:  MOVF   77,W
0319:  SUBWF  2C,W
031A:  BTFSC  03.0
031B:  GOTO   34C
....................    {
....................       LED=LED1|a;
031C:  MOVF   30,W
031D:  IORWF  28,W
031E:  MOVWF  24
031F:  MOVF   31,W
0320:  IORWF  29,W
0321:  MOVWF  25
0322:  MOVF   32,W
0323:  IORWF  2A,W
0324:  MOVWF  26
0325:  MOVF   33,W
0326:  IORWF  2B,W
0327:  MOVWF  27
....................       if(count!=10) break;
0328:  MOVF   34,W
0329:  SUBLW  0A
032A:  BTFSS  03.2
032B:  GOTO   34C
....................       output_d(LED);
032C:  BSF    03.5
032D:  CLRF   08
032E:  BCF    03.5
032F:  MOVF   24,W
0330:  MOVWF  08
....................       output_c(LED>>8);
0331:  CLRF   3A
0332:  MOVLW  00
0333:  MOVWF  35
0334:  BSF    03.5
0335:  CLRF   07
0336:  BCF    03.5
0337:  MOVF   25,W
0338:  MOVWF  07
....................       delay_ms(200);
0339:  MOVLW  C8
033A:  MOVWF  36
033B:  CALL   004
....................       XULY_NUTNHAN();
033C:  CALL   018
....................       xuatma7doan();
033D:  CALL   04B
....................       LED1=LED1>>1;
033E:  BCF    03.0
033F:  RRF    33,F
0340:  RRF    32,F
0341:  RRF    31,F
0342:  RRF    30,F
0343:  MOVLW  01
0344:  ADDWF  2C,F
0345:  BTFSC  03.0
0346:  INCF   2D,F
0347:  BTFSC  03.2
0348:  INCF   2E,F
0349:  BTFSC  03.2
034A:  INCF   2F,F
034B:  GOTO   2F4
....................       
....................    }
....................    a=LED; 
034C:  MOVF   27,W
034D:  MOVWF  2B
034E:  MOVF   26,W
034F:  MOVWF  2A
0350:  MOVF   25,W
0351:  MOVWF  29
0352:  MOVF   24,W
0353:  MOVWF  28
0354:  MOVLW  01
0355:  ADDWF  20,F
0356:  BTFSC  03.0
0357:  INCF   21,F
0358:  BTFSC  03.2
0359:  INCF   22,F
035A:  BTFSC  03.2
035B:  INCF   23,F
035C:  GOTO   2DE
....................    }
035D:  BCF    0A.3
035E:  BCF    0A.4
035F:  GOTO   3A6 (RETURN)
.................... }
.................... 
.................... 
.................... 
.................... void main()
0360:  MOVF   03,W
0361:  ANDLW  1F
0362:  MOVWF  03
0363:  MOVLW  71
0364:  BSF    03.5
0365:  MOVWF  0F
0366:  CLRF   10
0367:  MOVF   0F,W
0368:  MOVLW  01
0369:  BCF    03.5
036A:  MOVWF  34
036B:  MOVLW  FF
036C:  MOVWF  35
036D:  BSF    03.5
036E:  BSF    03.6
036F:  MOVF   09,W
0370:  ANDLW  C0
0371:  MOVWF  09
0372:  BCF    03.6
0373:  BCF    1F.4
0374:  BCF    1F.5
0375:  MOVLW  00
0376:  BSF    03.6
0377:  MOVWF  08
0378:  BCF    03.5
0379:  CLRF   07
037A:  CLRF   08
037B:  CLRF   09
037C:  BCF    03.7
.................... {
.................... set_tris_d(0);
037D:  MOVLW  00
037E:  BSF    03.5
037F:  BCF    03.6
0380:  MOVWF  08
.................... set_tris_c(0);
0381:  MOVWF  07
0382:  BCF    03.5
0383:  MOVWF  35
.................... set_tris_a(0);
0384:  BSF    03.5
0385:  MOVWF  05
.................... set_tris_b(0);
0386:  MOVWF  06
.................... set_tris_e(1);
0387:  BSF    09.0
0388:  BCF    09.1
0389:  BCF    09.2
038A:  BCF    09.3
.................... while(true)
.................... {
....................     switch (count) 
038B:  MOVLW  01
038C:  BCF    03.5
038D:  SUBWF  34,W
038E:  ADDLW  F6
038F:  BTFSC  03.0
0390:  GOTO   3A6
0391:  ADDLW  0A
0392:  GOTO   3A9
....................          {
....................     case 1:
....................       choptat();
0393:  GOTO   051
....................       break;
0394:  GOTO   3A6
....................     case 2:
....................       sangdanpst();
0395:  GOTO   09E
....................       break;
0396:  GOTO   3A6
....................     case 3:
....................    tatdantsp();
0397:  GOTO   0F4
....................          
....................          break;
0398:  GOTO   3A6
....................      case 4:
....................          sangdantsp();  
0399:  GOTO   137
....................          
....................         break;
039A:  GOTO   3A6
....................      case 5: 
....................          tatdanpst();
039B:  GOTO   186
....................              
....................         break;
039C:  GOTO   3A6
....................       case 6:
....................          sangdichpst();
039D:  GOTO   1C9
....................             
....................         break;
039E:  GOTO   3A6
....................       case 7:
....................          sangdichtsp();    
039F:  GOTO   20C
....................          break;
03A0:  GOTO   3A6
....................         case 8:
....................          sangdich3ledpst();    
03A1:  GOTO   250
....................          break;
03A2:  GOTO   3A6
....................        case 9:
....................        sangdich3ledtsp();    
03A3:  GOTO   293
....................        break;
03A4:  GOTO   3A6
....................         case 10:
....................        sangdontsp();    
03A5:  GOTO   2D6
....................        break;
.................... 
....................          }
03A6:  BSF    03.5
03A7:  GOTO   38B
....................    
.................... }
....................    
.................... }
03A8:  SLEEP

Configuration Fuses:
   Word  1: 2FE4   INTRC_IO NOWDT PUT MCLR NOPROTECT NOCPD BROWNOUT IESO FCMEN NOLVP NODEBUG
   Word  2: 3FFF   BORV40 NOWRT
